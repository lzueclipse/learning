--- sample.orig.cc	2018-03-19 14:27:42.269235498 +0800
+++ sample.cc	2018-03-19 14:31:39.157159168 +0800
@@ -109,6 +109,7 @@
       .schema(&schema)
       .set_range_partition_columns(column_names)
       .split_rows(splits)
+      .num_replicas(1)
       .Create();
   delete table_creator;
   return s;
@@ -133,7 +134,8 @@
 static Status InsertRows(const shared_ptr<KuduTable>& table, int num_rows) {
   shared_ptr<KuduSession> session = table->client()->NewSession();
   KUDU_RETURN_NOT_OK(session->SetFlushMode(KuduSession::MANUAL_FLUSH));
-  session->SetTimeoutMillis(5000);
+  session->SetTimeoutMillis(20000);
+  session->SetMutationBufferSpace(200 * 1024 * 1024);
 
   for (int i = 0; i < num_rows; i++) {
     KuduInsert* insert = table->NewInsert();
@@ -302,7 +304,7 @@
   // Insert some rows into the table.
   shared_ptr<KuduTable> table;
   KUDU_CHECK_OK(client->OpenTable(kTableName, &table));
-  KUDU_CHECK_OK(InsertRows(table, 1000));
+  KUDU_CHECK_OK(InsertRows(table, 1000000));
   KUDU_LOG(INFO) << "Inserted some rows into a table";
 
   // Scan some rows.
